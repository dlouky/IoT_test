{"device_id": "24c319455312bcd559b333c986024211", "device_name": 1000001, "credential_creation_date": "2020-07-20 21:19:16.026870", "device_function": "\nimport random\nfrom datetime import datetime as dt\n\nsignal_counter = 0 # The quantity of payloads generated by this device\nbattery_lev = 1 # The initial level battery of this device\n\ndef battery():\n    # Declare the global variables\n    global battery_lev, signal_counter\n    # Decrease battery level each 10 signals emitted\n    if signal_counter%10 == 0:\n        battery_lev = round(random.uniform(battery_lev-0.03, battery_lev), 2)\n    return battery_lev\n\ndef device():        \n    # Increment the count of payload generated by this device\n    global signal_counter\n    signal_counter +=1\n    \n    # Recover device name from the credential\n    device_name = credential['device_name']\n    \n    # Let's suppose that the devices will be located in the center of Argentina.\n    # Generate a random latitude and longitude within the limits of the \n    # selected area (area is obtained via https://boundingbox.klokantech.com/)\n    device_latitude = float(round(random.uniform(-37.36, -32.04), 6))\n    device_longitude = float(round(random.uniform(-68.22, -61.69), 6))\n    \n    # Let's simulate the battery level\n    bat_lvl = battery()\n    \n    # Now create the payload timestamp\n    signal_date = dt.now()\n    \n    # Finally return the payload\n    return json.dumps({\"device_id\": device_id,\n                        \"device_name\": device_name,\n                        \"device_latitude\": device_latitude,\n                        \"device_longitude\": device_longitude,\n                        \"device_battery_level\": bat_lvl,\n                        \"signal_date\":signal_date},\n                        default = str)\n", "CONNECTION_STR_PUB": "HostName=ioteStage2Hub.azure-devices.net;DeviceId=ioteStage2Device;SharedAccessKey=Dj26/8uTaukyrSqLvndzKJK8spfYK72wYS8g9t+BUdU="}